# Generated by Django 5.2 on 2025-04-14 08:17

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='adresse email')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('agriculteur', 'Agriculteur'), ('technicien', 'Technicien'), ('consultant', 'Consultant')], default='agriculteur', max_length=20, verbose_name='rôle')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='numéro de téléphone')),
                ('address', models.TextField(blank=True, null=True, verbose_name='adresse')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='photo de profil')),
                ('email_verified', models.BooleanField(default=False, verbose_name='email vérifié')),
                ('notification_email', models.BooleanField(default=True, verbose_name='notifications par email')),
                ('notification_classification', models.BooleanField(default=True, verbose_name='notifications de classification')),
                ('notification_reports', models.BooleanField(default=True, verbose_name='notifications de rapports')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de mise à jour')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'utilisateur',
                'verbose_name_plural': 'utilisateurs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailVerificationToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='token')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('expires_at', models.DateTimeField(verbose_name="date d'expiration")),
                ('is_used', models.BooleanField(default=False, verbose_name='utilisé')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "token de vérification d'email",
                'verbose_name_plural': "tokens de vérification d'email",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='token')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('expires_at', models.DateTimeField(verbose_name="date d'expiration")),
                ('is_used', models.BooleanField(default=False, verbose_name='utilisé')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'token de réinitialisation de mot de passe',
                'verbose_name_plural': 'tokens de réinitialisation de mot de passe',
                'ordering': ['-created_at'],
            },
        ),
    ]
