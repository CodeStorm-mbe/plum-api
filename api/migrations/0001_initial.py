# Generated by Django 5.2 on 2025-04-14 08:17

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApiKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='clé API')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('requests_limit', models.IntegerField(default=1000, verbose_name='limite de requêtes')),
                ('requests_count', models.IntegerField(default=0, verbose_name='nombre de requêtes')),
                ('can_read', models.BooleanField(default=True, verbose_name='peut lire')),
                ('can_write', models.BooleanField(default=False, verbose_name='peut écrire')),
                ('can_delete', models.BooleanField(default=False, verbose_name='peut supprimer')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name="date d'expiration")),
                ('last_used_at', models.DateTimeField(blank=True, null=True, verbose_name='dernière utilisation')),
            ],
            options={
                'verbose_name': 'clé API',
                'verbose_name_plural': 'clés API',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ApiLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('endpoint', models.CharField(max_length=255, verbose_name='endpoint')),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('PATCH', 'PATCH'), ('DELETE', 'DELETE')], max_length=10, verbose_name='méthode')),
                ('status_code', models.IntegerField(verbose_name='code de statut')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='horodatage')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='adresse IP')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='user agent')),
                ('request_data', models.JSONField(blank=True, null=True, verbose_name='données de la requête')),
                ('response_data', models.JSONField(blank=True, null=True, verbose_name='données de la réponse')),
                ('processing_time', models.FloatField(blank=True, null=True, verbose_name='temps de traitement (ms)')),
            ],
            options={
                'verbose_name': 'log API',
                'verbose_name_plural': 'logs API',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('feedback_type', models.CharField(choices=[('correct', 'Correct'), ('incorrect', 'Incorrect'), ('unsure', 'Incertain')], max_length=20, verbose_name='type de feedback')),
                ('correct_class', models.CharField(blank=True, max_length=20, null=True, verbose_name='classe correcte')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='commentaire')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
            ],
            options={
                'verbose_name': 'feedback',
                'verbose_name_plural': 'feedbacks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('classification', 'Classification'), ('batch_complete', 'Traitement par lot terminé'), ('account', 'Compte'), ('system', 'Système')], max_length=20, verbose_name='type')),
                ('title', models.CharField(max_length=255, verbose_name='titre')),
                ('message', models.TextField(verbose_name='message')),
                ('is_read', models.BooleanField(default=False, verbose_name='lue')),
                ('is_sent_by_email', models.BooleanField(default=False, verbose_name='envoyée par email')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='date de lecture')),
                ('data', models.JSONField(blank=True, null=True, verbose_name='données')),
            ],
            options={
                'verbose_name': 'notification',
                'verbose_name_plural': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
    ]
